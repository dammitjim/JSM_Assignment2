package jsm_assignment2;

import java.awt.*;
import java.awt.event.*;
import javax.sound.midi.MidiDevice;
import javax.sound.midi.MidiSystem;
import javax.sound.midi.MidiUnavailableException;
import javax.sound.midi.ShortMessage;
import javax.sound.midi.Transmitter;
import javax.swing.*;
import javax.swing.border.*;
import javax.sound.sampled.*;
import javax.swing.JOptionPane;

/**
 * Custom display component for Electronic Organ application.
 */
public class OrganDialogue {

    /**
     * Constant value for sine waves
     */
    public static final int SINE_WAVEFORM = 0;
    /**
     * Constant value for square waves
     */
    public static final int SQUARE_WAVEFORM = 1;
    /**
     * Constant value for sawtooth waves
     */
    public static final int SAWTOOTH_WAVEFORM = 2;
    /**
     * Constant value for triangle waves
     */
    public static final int TRIANGLE_WAVEFORM = 3;
    private ElectronicOrganFrame frame;

    /**
     * Create a new display component with specified program title.
     */
    public OrganDialogue(String title) {
        frame = new ElectronicOrganFrame(title);
    } // OrganDialogue ()

    /**
     * Return the currently selected waveform, which will be one of:
     * SINE_WAVEFORM, SQUARE_WAVEFORM, SAWTOOTH_WAVEFORM or TRIANGLE_WAVEFORM
     */
    public int getWaveform() {
        if (frame.sineButton.isSelected()) {
            return SINE_WAVEFORM;
        }
        if (frame.squareButton.isSelected()) {
            return SQUARE_WAVEFORM;
        }
        if (frame.sawtoothButton.isSelected()) {
            return SAWTOOTH_WAVEFORM;
        }
        if (frame.triangleButton.isSelected()) {
            return TRIANGLE_WAVEFORM;
        }
        return SINE_WAVEFORM;
    } // getWaveform ()
} // class OrganDialogue

// Source file generated by UWE GUI BUILDER Version 1.6 beta  Free-Ware
// File Pass 1...(Class file creation)
class ElectronicOrganFrame extends JFrame
        implements ActionListener, WindowListener {

    // Listener objects
    ActionListener actionListener = this;
    WindowListener windowListener = this;
    // Components for Panel waveformPanel
    JPanel waveformPanel = new JPanel();
    ButtonGroup waveformPanelRadio = new ButtonGroup();
    JRadioButton sineButton = new JRadioButton("Sine");
    JRadioButton squareButton = new JRadioButton("Square");
    JRadioButton sawtoothButton = new JRadioButton("Sawtooth");
    JRadioButton triangleButton = new JRadioButton("Triangle");
    // Components for Panel exitPanel
    JPanel exitPanel = new JPanel();
    JLabel label1 = new JLabel(" ", JLabel.CENTER);
    JLabel label2 = new JLabel(" ", JLabel.CENTER);
    JButton exitButton = new JButton("Exit");
    JLabel label3 = new JLabel(" ", JLabel.CENTER);
    JLabel label4 = new JLabel(" ", JLabel.CENTER);
    JLabel label5 = new JLabel("Electronic Organ", JLabel.CENTER);
    JLabel label6 = new JLabel("          ", JLabel.CENTER);
    JLabel label7 = new JLabel("          ", JLabel.CENTER);
    // File Pass 2...(Constructor creation)

    // Public constructor
    public ElectronicOrganFrame(String title) {
        // Call parent constructor to give title to frame
        super(title);

        // Make this frame its own window listener
        addWindowListener(windowListener);

        // Panel components: waveformPanel
        waveformPanel.setBorder(new TitledBorder(
                new BevelBorder(BevelBorder.RAISED), "Waveform Options"));
        GridBagLayout waveformPanelGridBag = new GridBagLayout();
        GridBagConstraints waveformPanelConstr = new GridBagConstraints();
        waveformPanel.setLayout(waveformPanelGridBag);
        waveformPanelConstr.anchor = GridBagConstraints.CENTER;
        waveformPanelConstr.weightx = 1.0;
        waveformPanelConstr.weighty = 1.0;
        waveformPanelConstr.fill = GridBagConstraints.BOTH;
        waveformPanelConstr.gridx = 0;
        waveformPanelConstr.gridy = 0;
        waveformPanelConstr.gridwidth = 1;
        waveformPanelConstr.gridheight = 1;
        waveformPanelGridBag.setConstraints(sineButton, waveformPanelConstr);
        waveformPanel.add(sineButton);
        waveformPanelRadio.add(sineButton);
        sineButton.addActionListener(actionListener);
        waveformPanelConstr.gridx = 1;
        waveformPanelConstr.gridy = 0;
        waveformPanelConstr.gridwidth = 1;
        waveformPanelConstr.gridheight = 1;
        waveformPanelGridBag.setConstraints(squareButton, waveformPanelConstr);
        waveformPanel.add(squareButton);
        waveformPanelRadio.add(squareButton);
        squareButton.addActionListener(actionListener);
        waveformPanelConstr.gridx = 2;
        waveformPanelConstr.gridy = 0;
        waveformPanelConstr.gridwidth = 1;
        waveformPanelConstr.gridheight = 1;
        waveformPanelGridBag.setConstraints(sawtoothButton, waveformPanelConstr);
        waveformPanel.add(sawtoothButton);
        waveformPanelRadio.add(sawtoothButton);
        sawtoothButton.addActionListener(actionListener);
        waveformPanelConstr.gridx = 3;
        waveformPanelConstr.gridy = 0;
        waveformPanelConstr.gridwidth = 1;
        waveformPanelConstr.gridheight = 1;
        waveformPanelGridBag.setConstraints(triangleButton, waveformPanelConstr);
        waveformPanel.add(triangleButton);
        waveformPanelRadio.add(triangleButton);
        triangleButton.addActionListener(actionListener);

        // Panel components: exitPanel
        exitPanel.setLayout(new GridLayout(1, 5));
        exitPanel.add(label1);
        exitPanel.add(label2);
        exitPanel.add(exitButton);
        exitButton.addActionListener(actionListener);
        exitPanel.add(label3);
        exitPanel.add(label4);
        GridBagLayout thisGridBag = new GridBagLayout();
        GridBagConstraints thisConstr = new GridBagConstraints();
        this.getContentPane().setLayout(thisGridBag);
        thisConstr.anchor = GridBagConstraints.CENTER;
        thisConstr.weightx = 1.0;
        thisConstr.weighty = 1.0;
        thisConstr.fill = GridBagConstraints.BOTH;
        thisConstr.gridx = 0;
        thisConstr.gridy = 0;
        thisConstr.gridwidth = 3;
        thisConstr.gridheight = 1;
        thisGridBag.setConstraints(label5, thisConstr);
        this.getContentPane().add(label5);
        thisConstr.gridx = 0;
        thisConstr.gridy = 1;
        thisConstr.gridwidth = 1;
        thisConstr.gridheight = 1;
        thisGridBag.setConstraints(label6, thisConstr);
        this.getContentPane().add(label6);
        thisConstr.gridx = 1;
        thisConstr.gridy = 1;
        thisConstr.gridwidth = 1;
        thisConstr.gridheight = 1;
        thisGridBag.setConstraints(waveformPanel, thisConstr);
        this.getContentPane().add(waveformPanel);
        thisConstr.gridx = 2;
        thisConstr.gridy = 1;
        thisConstr.gridwidth = 1;
        thisConstr.gridheight = 1;
        thisGridBag.setConstraints(label7, thisConstr);
        this.getContentPane().add(label7);
        thisConstr.gridx = 1;
        thisConstr.gridy = 2;
        thisConstr.gridwidth = 1;
        thisConstr.gridheight = 1;
        thisGridBag.setConstraints(exitPanel, thisConstr);
        this.getContentPane().add(exitPanel);

        // Set frame size and show it
        setSize(500, 200);
        setVisible(true);
    } // Frame constructor ElectronicOrganFrame ()

    //File Pass 3...(Window and Action Listeners)
    // Window listener interface methods
    public void windowActivated(WindowEvent e) {
        // System.out.println ("Window activated");
    } // windowActivated ()

    public void windowClosed(WindowEvent e) {
        // System.out.println ("Window closed");
    } // windowClosed ()

    public void windowClosing(WindowEvent e) {
        // System.out.println ("Window closing");
        System.exit(0);
    } // windowClosing ()

    public void windowDeactivated(WindowEvent e) {
        // System.out.println ("Window deactivated");
    } // windowDeactivated ()

    public void windowDeiconified(WindowEvent e) {
        // System.out.println ("Window deiconified");
    } // windowDeiconified ()

    public void windowIconified(WindowEvent e) {
        // System.out.println ("Window iconified");
    } // windowIconifed ()

    public void windowOpened(WindowEvent e) {
        // System.out.println ("Window opened");
    } // windowOpened ()

    // Action Listener interface method
    public void actionPerformed(ActionEvent event) {
        Object target = event.getSource();
        if (target == sineButton) {
            // System.out.println ("AE1 JButton sineButton selected");
        } else if (target == squareButton) {
            // System.out.println ("AE2 JButton squareButton selected");
        } else if (target == sawtoothButton) {
            // System.out.println ("AE3 JButton sawtoothButton selected");
        } else if (target == triangleButton) {
            // System.out.println ("AE4 JButton triangleButton selected");
        } else if (target == exitButton) {
            // System.out.println ("AE5 JButton exitButton selected");
            System.exit(0);
        } else {
        } // if
    } // actionPerformed ()
    //File Pass 4...(Document Listener)
    //File Pass 5...(Item Listener)
    //File Pass 6...(List Selection Listener)
    //File Pass 7...(Adjustment Listener)
    //File Pass 8...(Change Listener)
   
} // Frame ElectronicOrganFrame
